---
- hosts: master
  gather_facts: no
  become: false
  tasks:
  - name: copy kubeconfig
    fetch:
      src: "/etc/kubernetes/admin.conf"
      dest: "/tmp/kubeconfig"
      flat: true
- hosts: localhost
  connection: local
  gather_facts: no
  become: false
  tasks:
  - name: transform kubeconfig
    shell: |
      sed 's/kubernetes/{{ cluster_name }}/g' -i /tmp/kubeconfig
      yq eval /tmp/kubeconfig -o json | \
        jq '.clusters[0].cluster += {"proxy-url": "socks5://localhost:{{ tunnel_port }}"}' | \
        yq -P > /tmp/kubeconfig-with-proxy
      export _current_kubeconfig="${KUBECONFIG:-${HOME}/.kube/config}"
      mkdir -p "$(dirname "${_current_kubeconfig}")"
      touch "${_current_kubeconfig}"
      KUBECONFIG="/tmp/kubeconfig-with-proxy:${_current_kubeconfig}" kubectl config view --flatten > /tmp/kubeconfig-all-in-one
      mv /tmp/kubeconfig-all-in-one "${_current_kubeconfig}"
      chmod 600 "${_current_kubeconfig}"
      rm /tmp/kubeconfig || true
      rm /tmp/kubeconfig-with-proxy || true
      rm /tmp/kubeconfig-all-in-one || true
  - name: setup tunnel
    shell: |
      if (! sudo lsof -t -i @127.0.0.1:{{ tunnel_port }}) || (kill -9 "$(sudo lsof -t -i @127.0.0.1:{{ tunnel_port }})"); then
        eval "$(sed -e 's/^ssh/ssh -D {{ tunnel_port }} -q -N/g' -e 's/$/ \&/g' < {{ ssh_command }})"
      else
        echo "cannot kill process running on port {{ tunnel_port }}"
        exit 1
      fi