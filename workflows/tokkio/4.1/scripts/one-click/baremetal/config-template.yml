schema_version: '0.0.7'
name: '<replace-with-unique-name>'
spec:
  infra:
    csp: 'bm'
    backend: {}
    provider: {}
    configs:
      cns:
        # version: <replace-with-desired-cns-version-defaults-to-12.2>
        # git_ref: <replace-with-git-commit-hash-defaults-to-latest-commit-hash-of-master-branch>
        override_values:
          cns_nvidia_driver: <replace-with-yes-or-no-yes-when-need-to-install-nvidia-driver-using-runfile>
          #gpu_driver_version: <replace-with-desired-gpu-driver-version>
      ssh_public_key: "{{ lookup('file', lookup('env', 'HOME') +'ssh-pub-key-path') }}"
      ssh_private_key_path: "{{ lookup('env', 'HOME') + 'ssh-pem-key-path' }}"
      additional_ssh_public_keys: []
      #turn_server_provider: '<one-of-allowed-implementation-coturn|twilio-defaults-to-coturn>'
      clusters:
        app:
          master:
            user: "{{ lookup('env', 'APP_HOST_SSH_USER') }}"
            host: "{{ lookup('env', 'APP_HOST_IPV4_ADDR') }}"
          ports:
            app:
              port: 80
            grafana:
              port: 32300
              path: login
            prometheus:
              port: 30090
              path: graph
            kibana:
              port: 31565
              path: 'app/kibana'
          features:
            cns: true
            app: true
        turn:
          master:
            user: "{{ lookup('env', 'COTURN_HOST_SSH_USER') }}"
            host: "{{ lookup('env', 'COTURN_HOST_IPV4_ADDR') }}"
          features:
            coturn: true
  platform:
    configs:
      # k8s_namespace: '<replace-with-k8s-namespace-for-foundational-chart-to-deploy-defaults-to-platform>'
      k8s_secrets:
        - name: 'ngc-api-key-secret'
          type: 'Opaque'
          entries:
            - key: NGC_CLI_API_KEY
              value: "{{ lookup('env', 'NGC_CLI_API_KEY') }}"
        - name: 'ngc-docker-reg-secret'
          type: 'dockerconfigjson'
          registry_name: "nvcr.io"
          username: '$oauthtoken'
          password: "{{ lookup('env', 'NGC_CLI_API_KEY') }}"
    secrets:
      ngc_cli_api_key: "{{ lookup('env', 'NGC_CLI_API_KEY') }}"
  app:
    configs:
      app_settings:
        # k8s_namespace: '<replace-with-k8s-namespace-for-app-chart-to-deploy-defaults-to-app>'
        # helm_chart:
        #   repo:
        #     enable: <true/false-defaults-to-true>
        #     repo_url: '<replace-with-app-chart-helm-repo-url-defaults-to-https://helm.ngc.nvidia.com/nvidia/ace>'
        #     chart_name: '<replace-with-app-chart-name-defaults-to-ucs-tokkio-app-base-3-stream-llm-rag-3d-ov>'
        #     chart_version: '<replace-with-chart-version-defaults-to-4.1.4>'
        #     release_name: '<replace-with-release-name-for-helm-deploy-defaults-to-tokkio-app>'
        #     user_value_override_files: ['list-of-absolute-path-of-value-override-files']
        #   local:
        #      enable: <true/false-defaults-to-false>
        #      path: '<absolute-path-of-helm-chart-present-locally>'
        #      release_name: '<replace-with-release-name-for-helm-deploy-defaults-to-tokkio-app>'
        #      user_value_override_files: ['list-of-absolute-path-of-value-override-files']
        k8s_secrets:
          - name: 'ngc-api-key-secret'
            type: 'Opaque'
            entries:
              - key: NGC_CLI_API_KEY
                value: "{{ lookup('env', 'NGC_CLI_API_KEY') }}"
          - name: 'openai-key-secret'
            type: 'Opaque'
            entries:
              - key: OPENAI_API_KEY
                value: "{{ lookup('env', 'OPENAI_API_KEY') }}"
          - name: 'nvidia-api-key-secret'
            type: 'Opaque'
            entries:
              - key: NVIDIA_API_KEY
                value: "{{ lookup('env', 'NVIDIA_API_KEY') }}"
          - name: 'ngc-docker-reg-secret'
            type: 'dockerconfigjson'
            registry_name: "nvcr.io"
            username: '$oauthtoken'
            password: "{{ lookup('env', 'NGC_CLI_API_KEY') }}"
          # #NOTE: Uncomment below secret when deploying UE chart - ucs-tokkio-app-base-3-stream-retail-3d-ue
          # - name: 'ghcr-docker-reg-secret'
          #   type: 'dockerconfigjson'
          #   registry_name: "ghcr.io"
          #   username: "{{ lookup('env', 'GITHUB_USERNAME') }}"
          #   password: "{{ lookup('env', 'GITHUB_ACCESS_TOKEN') }}"
      # turn_server_settings:
        # # NOTE: Uncomment and update below section - coturn_settings in case turn_server_provider = coturn
        # coturn:
        #   username: '<replace-with-a-username-to-use-for-the-turnserver-defaults-to-foo>'
        #   password: '<replace-with-a-password-to-use-for-the-turnserver-defaults-to-bar>'
        #   realm: '<replace-with-a-realm-to-use-for-the-turnserver-defaults-to-mydummyt.org>'
        # # NOTE: # Uncomment and pass correct value for account_sid & auth_token for account_sid & account_sid  when turn_server_provider = twilio.
        # twilio:
        #   account_sid: '<replace-with-correct-twilio-account_sid-value-defaults-to-empty-string>'
        #   auth_token: '<replace-with-correct-twilio-auth_token-value-defailts-to-empty-string>'
      # ui_settings:
      #   resource:
      #     ngc:
      #       org: '<replace-with-ngc-org-defaults-to-nvidia>'
      #       team: '<replace-with-ngc-team-defaults-to-ace>'
      #       name: '<replace-with-ngc-resource-name-defaults-to-tokkio_ui>'
      #       version: '<replace-with-resource-version-defaults-to-5.0.0>'
      #       file: '<replace-with-resource-file-name-defaults-to-ui.tar.gz>'
      #   # NOTE: Uncomment user_env_vars when you need to pass ui configuration. it should be key: value format and its case sensitive.
      #   user_env_vars:
    secrets:
      ngc_cli_api_key: "{{ lookup('env', 'NGC_CLI_API_KEY') }}"
