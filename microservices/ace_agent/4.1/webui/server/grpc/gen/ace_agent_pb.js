//
// Copyright (c) 2024, NVIDIA CORPORATION.  All rights reserved.
//
// NVIDIA CORPORATION and its licensors retain all intellectual property
// and proprietary rights in and to this software, related documentation
// and any modifications thereto.  Any use, reproduction, disclosure or
// distribution of this software and related documentation without an express
// license agreement from NVIDIA CORPORATION is strictly prohibited.

// @generated by protoc-gen-es v1.8.0
// @generated from file ace_agent.proto (package nvidia.aceagent.chatcontroller.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";

/**
 *
 * Message type field for Chat controller metadata streaming
 *
 * @generated from enum nvidia.aceagent.chatcontroller.v1.MessageType
 */
export const MessageType = /*@__PURE__*/ proto3.makeEnum(
  "nvidia.aceagent.chatcontroller.v1.MessageType",
  [
    {no: 0, name: "UNKNOWN_RESPONSE"},
    {no: 1, name: "ASR_RESPONSE"},
    {no: 2, name: "CHAT_ENGINE_RESPONSE"},
    {no: 3, name: "TTS_RESPONSE"},
    {no: 4, name: "PIPELINE_STATE_RESPONSE"},
    {no: 5, name: "DISPLAY_TEXT"},
  ],
);

/**
 *
 * Generic Chat controller API status
 *
 * @generated from enum nvidia.aceagent.chatcontroller.v1.APIStatus
 */
export const APIStatus = /*@__PURE__*/ proto3.makeEnum(
  "nvidia.aceagent.chatcontroller.v1.APIStatus",
  [
    {no: 0, name: "UNKNOWN_STATUS"},
    {no: 1, name: "SUCCESS"},
    {no: 2, name: "PIPELINE_AVAILABLE"},
    {no: 3, name: "PIPELINE_NOT_AVAILABLE"},
    {no: 4, name: "BUSY"},
    {no: 5, name: "ERROR"},
    {no: 6, name: "INFO"},
  ],
);

/**
 *
 * Chat controller Pipeline States
 *
 * @generated from enum nvidia.aceagent.chatcontroller.v1.PipelineState
 */
export const PipelineState = /*@__PURE__*/ proto3.makeEnum(
  "nvidia.aceagent.chatcontroller.v1.PipelineState",
  [
    {no: 0, name: "INIT"},
    {no: 1, name: "IDLE"},
    {no: 2, name: "WAIT_FOR_TRIGGER"},
    {no: 3, name: "ASR_ACTIVE"},
    {no: 4, name: "DM_ACTIVE"},
    {no: 5, name: "TTS_ACTIVE"},
  ],
);

/**
 *
 * AudioEncoding specifies the encoding of the audio bytes in the encapsulating message.
 *
 * @generated from enum nvidia.aceagent.chatcontroller.v1.AudioEncoding
 */
export const AudioEncoding = /*@__PURE__*/ proto3.makeEnum(
  "nvidia.aceagent.chatcontroller.v1.AudioEncoding",
  [
    {no: 0, name: "UNKNOWN"},
    {no: 1, name: "LINEAR_PCM"},
    {no: 2, name: "FLAC"},
    {no: 3, name: "MULAW"},
    {no: 5, name: "ALAW"},
  ],
);

/**
 *
 * Used in storing conversation history for user and bot
 *
 * @generated from enum nvidia.aceagent.chatcontroller.v1.Role
 */
export const Role = /*@__PURE__*/ proto3.makeEnum(
  "nvidia.aceagent.chatcontroller.v1.Role",
  [
    {no: 0, name: "UNDEFINED"},
    {no: 1, name: "USER"},
    {no: 2, name: "BOT"},
    {no: 3, name: "SYSTEM"},
  ],
);

/**
 *
 * The SendAudioRequest is used to send either StreamingRecognitionConfig message
 * or audio content. The first SendAudioRequest message must contain a
 * StreamingRecognitionConfig message, followed by the audio content messages.
 *
 * @generated from message nvidia.aceagent.chatcontroller.v1.SendAudioRequest
 */
export const SendAudioRequest = /*@__PURE__*/ proto3.makeMessageType(
  "nvidia.aceagent.chatcontroller.v1.SendAudioRequest",
  () => [
    { no: 1, name: "stream_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "streaming_config", kind: "message", T: StreamingRecognitionConfig, oneof: "streaming_request" },
    { no: 3, name: "audio_content", kind: "scalar", T: 12 /* ScalarType.BYTES */, oneof: "streaming_request" },
    { no: 4, name: "source_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "create_time", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * Provides information to the ASR recognizer about incoming audio data
 *
 * @generated from message nvidia.aceagent.chatcontroller.v1.StreamingRecognitionConfig
 */
export const StreamingRecognitionConfig = /*@__PURE__*/ proto3.makeMessageType(
  "nvidia.aceagent.chatcontroller.v1.StreamingRecognitionConfig",
  () => [
    { no: 1, name: "encoding", kind: "enum", T: proto3.getEnumType(AudioEncoding) },
    { no: 2, name: "sample_rate_hertz", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "language_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "audio_channel_count", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "model", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 *
 * ReceiveAudioRequest is used to request audio data for specified stream_id.
 *
 * @generated from message nvidia.aceagent.chatcontroller.v1.ReceiveAudioRequest
 */
export const ReceiveAudioRequest = /*@__PURE__*/ proto3.makeMessageType(
  "nvidia.aceagent.chatcontroller.v1.ReceiveAudioRequest",
  () => [
    { no: 1, name: "stream_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 *
 * StreamingSpeechResultsRequest is used to request various results from chat
 * controller.
 *
 * @generated from message nvidia.aceagent.chatcontroller.v1.StreamingSpeechResultsRequest
 */
export const StreamingSpeechResultsRequest = /*@__PURE__*/ proto3.makeMessageType(
  "nvidia.aceagent.chatcontroller.v1.StreamingSpeechResultsRequest",
  () => [
    { no: 1, name: "stream_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "request_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 *
 * PipelineRequest is used to create/free pipeline specified using stream_id
 *
 * @generated from message nvidia.aceagent.chatcontroller.v1.PipelineRequest
 */
export const PipelineRequest = /*@__PURE__*/ proto3.makeMessageType(
  "nvidia.aceagent.chatcontroller.v1.PipelineRequest",
  () => [
    { no: 1, name: "stream_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 *
 * UserParametersRequest is used to set user parameters
 *
 * @generated from message nvidia.aceagent.chatcontroller.v1.UserParametersRequest
 */
export const UserParametersRequest = /*@__PURE__*/ proto3.makeMessageType(
  "nvidia.aceagent.chatcontroller.v1.UserParametersRequest",
  () => [
    { no: 1, name: "stream_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "bot_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 *
 * GetStatusRequest used to get on demand Chat controller pipeline status
 *
 * @generated from message nvidia.aceagent.chatcontroller.v1.GetStatusRequest
 */
export const GetStatusRequest = /*@__PURE__*/ proto3.makeMessageType(
  "nvidia.aceagent.chatcontroller.v1.GetStatusRequest",
  () => [
    { no: 1, name: "stream_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 *
 * SpeechRecognitionControlRequest is used for controlling input to
 * ASR internally muting ASR.
 * It is also used to disable DM-TTS flow for the incoming ASR input
 *
 * @generated from message nvidia.aceagent.chatcontroller.v1.SpeechRecognitionControlRequest
 */
export const SpeechRecognitionControlRequest = /*@__PURE__*/ proto3.makeMessageType(
  "nvidia.aceagent.chatcontroller.v1.SpeechRecognitionControlRequest",
  () => [
    { no: 1, name: "stream_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "is_standalone", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
);

/**
 *
 * Reload Speech Configs Request
 *
 * @generated from message nvidia.aceagent.chatcontroller.v1.ReloadSpeechConfigsRequest
 */
export const ReloadSpeechConfigsRequest = /*@__PURE__*/ proto3.makeMessageType(
  "nvidia.aceagent.chatcontroller.v1.ReloadSpeechConfigsRequest",
  () => [
    { no: 1, name: "stream_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 *
 * UserContextRequest used to request user context
 *
 * @generated from message nvidia.aceagent.chatcontroller.v1.UserContextRequest
 */
export const UserContextRequest = /*@__PURE__*/ proto3.makeMessageType(
  "nvidia.aceagent.chatcontroller.v1.UserContextRequest",
  () => [
    { no: 1, name: "stream_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 *
 * UserContext data containing user specific information.
 *
 * @generated from message nvidia.aceagent.chatcontroller.v1.UserContext
 */
export const UserContext = /*@__PURE__*/ proto3.makeMessageType(
  "nvidia.aceagent.chatcontroller.v1.UserContext",
  () => [
    { no: 1, name: "stream_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "bot_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "conversation_history", kind: "message", T: ConversationHistory, repeated: true },
    { no: 5, name: "context_json", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message nvidia.aceagent.chatcontroller.v1.ConversationHistory
 */
export const ConversationHistory = /*@__PURE__*/ proto3.makeMessageType(
  "nvidia.aceagent.chatcontroller.v1.ConversationHistory",
  () => [
    { no: 1, name: "bot_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "conversation", kind: "message", T: ConversationInstance, repeated: true },
  ],
);

/**
 * @generated from message nvidia.aceagent.chatcontroller.v1.ConversationInstance
 */
export const ConversationInstance = /*@__PURE__*/ proto3.makeMessageType(
  "nvidia.aceagent.chatcontroller.v1.ConversationInstance",
  () => [
    { no: 1, name: "role", kind: "enum", T: proto3.getEnumType(Role) },
    { no: 2, name: "content", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * Chat controller pipeline status response
 *
 * @generated from message nvidia.aceagent.chatcontroller.v1.GetStatusResponse
 */
export const GetStatusResponse = /*@__PURE__*/ proto3.makeMessageType(
  "nvidia.aceagent.chatcontroller.v1.GetStatusResponse",
  () => [
    { no: 1, name: "stream_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "pipeline_state", kind: "message", T: PipelineStateResponse },
  ],
);

/**
 * Chat controller Metadata streaming response
 *
 * @generated from message nvidia.aceagent.chatcontroller.v1.StreamingSpeechResultsResponse
 */
export const StreamingSpeechResultsResponse = /*@__PURE__*/ proto3.makeMessageType(
  "nvidia.aceagent.chatcontroller.v1.StreamingSpeechResultsResponse",
  () => [
    { no: 1, name: "stream_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "message_type", kind: "enum", T: proto3.getEnumType(MessageType) },
    { no: 3, name: "asr_result", kind: "message", T: ASRResult, oneof: "metadata" },
    { no: 4, name: "chat_engine_response", kind: "message", T: ChatEngineResponse, oneof: "metadata" },
    { no: 5, name: "tts_result", kind: "message", T: TTSResult, oneof: "metadata" },
    { no: 6, name: "pipeline_state", kind: "message", T: PipelineStateResponse, oneof: "metadata" },
    { no: 7, name: "display_text", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "metadata" },
  ],
);

/**
 * ASR Result
 *
 * @generated from message nvidia.aceagent.chatcontroller.v1.ASRResult
 */
export const ASRResult = /*@__PURE__*/ proto3.makeMessageType(
  "nvidia.aceagent.chatcontroller.v1.ASRResult",
  () => [
    { no: 1, name: "results", kind: "message", T: StreamingRecognitionResult },
    { no: 2, name: "latency_ms", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 3, name: "start_time", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "stop_time", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * A streaming speech recognition result corresponding to a portion of the audio
 * that is currently being processed.
 *
 * @generated from message nvidia.aceagent.chatcontroller.v1.StreamingRecognitionResult
 */
export const StreamingRecognitionResult = /*@__PURE__*/ proto3.makeMessageType(
  "nvidia.aceagent.chatcontroller.v1.StreamingRecognitionResult",
  () => [
    { no: 1, name: "alternatives", kind: "message", T: SpeechRecognitionAlternative, repeated: true },
    { no: 2, name: "is_final", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 3, name: "stability", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 5, name: "channel_tag", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "audio_processed", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
  ],
);

/**
 * Alternative hypotheses (a.k.a. n-best list).
 *
 * @generated from message nvidia.aceagent.chatcontroller.v1.SpeechRecognitionAlternative
 */
export const SpeechRecognitionAlternative = /*@__PURE__*/ proto3.makeMessageType(
  "nvidia.aceagent.chatcontroller.v1.SpeechRecognitionAlternative",
  () => [
    { no: 1, name: "transcript", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "confidence", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 3, name: "words", kind: "message", T: WordInfo, repeated: true },
  ],
);

/**
 * Word-specific information for recognized words.
 *
 * @generated from message nvidia.aceagent.chatcontroller.v1.WordInfo
 */
export const WordInfo = /*@__PURE__*/ proto3.makeMessageType(
  "nvidia.aceagent.chatcontroller.v1.WordInfo",
  () => [
    { no: 1, name: "start_time", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "end_time", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "word", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "confidence", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
  ],
);

/**
 * Chat Engine Result json
 *
 * @generated from message nvidia.aceagent.chatcontroller.v1.ChatEngineResponse
 */
export const ChatEngineResponse = /*@__PURE__*/ proto3.makeMessageType(
  "nvidia.aceagent.chatcontroller.v1.ChatEngineResponse",
  () => [
    { no: 1, name: "stream_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "result", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "latency_ms", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
  ],
);

/**
 * TTS result metadata
 *
 * @generated from message nvidia.aceagent.chatcontroller.v1.TTSResult
 */
export const TTSResult = /*@__PURE__*/ proto3.makeMessageType(
  "nvidia.aceagent.chatcontroller.v1.TTSResult",
  () => [
    { no: 1, name: "latency_ms", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
  ],
);

/**
 * Chat controller pipeline state response
 *
 * @generated from message nvidia.aceagent.chatcontroller.v1.PipelineStateResponse
 */
export const PipelineStateResponse = /*@__PURE__*/ proto3.makeMessageType(
  "nvidia.aceagent.chatcontroller.v1.PipelineStateResponse",
  () => [
    { no: 1, name: "state", kind: "enum", T: proto3.getEnumType(PipelineState) },
  ],
);

/**
 * Receive Audio API Response
 *
 * @generated from message nvidia.aceagent.chatcontroller.v1.ReceiveAudioResponse
 */
export const ReceiveAudioResponse = /*@__PURE__*/ proto3.makeMessageType(
  "nvidia.aceagent.chatcontroller.v1.ReceiveAudioResponse",
  () => [
    { no: 1, name: "stream_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "audio_content", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 3, name: "encoding", kind: "enum", T: proto3.getEnumType(AudioEncoding) },
    { no: 4, name: "sample_rate_hertz", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "audio_channel_count", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "frame_size", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ],
);

/**
 * Generic API status response message
 *
 * @generated from message nvidia.aceagent.chatcontroller.v1.APIStatusResponse
 */
export const APIStatusResponse = /*@__PURE__*/ proto3.makeMessageType(
  "nvidia.aceagent.chatcontroller.v1.APIStatusResponse",
  () => [
    { no: 1, name: "stream_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "response_msg", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "status", kind: "enum", T: proto3.getEnumType(APIStatus) },
  ],
);

/**
 *
 * Request message for standalone TTS synthesis of provided text transcript
 *
 * @generated from message nvidia.aceagent.chatcontroller.v1.SynthesizeSpeechRequest
 */
export const SynthesizeSpeechRequest = /*@__PURE__*/ proto3.makeMessageType(
  "nvidia.aceagent.chatcontroller.v1.SynthesizeSpeechRequest",
  () => [
    { no: 1, name: "stream_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "transcript", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 *
 * Request message for Chat API which will be sent to chat engine
 *
 * @generated from message nvidia.aceagent.chatcontroller.v1.ChatRequest
 */
export const ChatRequest = /*@__PURE__*/ proto3.makeMessageType(
  "nvidia.aceagent.chatcontroller.v1.ChatRequest",
  () => [
    { no: 1, name: "stream_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "bot_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "query", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "query_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "source_language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "target_language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "is_standalone", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 9, name: "user_context", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 9 /* ScalarType.STRING */} },
    { no: 10, name: "metadata", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 9 /* ScalarType.STRING */} },
  ],
);

/**
 *
 * Response message from chat engine for Chat API invocation
 *
 * @generated from message nvidia.aceagent.chatcontroller.v1.ChatResponse
 */
export const ChatResponse = /*@__PURE__*/ proto3.makeMessageType(
  "nvidia.aceagent.chatcontroller.v1.ChatResponse",
  () => [
    { no: 1, name: "stream_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "query", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "query_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "session_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "text", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "cleaned_text", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "is_final", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 9, name: "json_response", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 *
 * Request message for Event API which will be sent to chat engine
 *
 * @generated from message nvidia.aceagent.chatcontroller.v1.EventRequest
 */
export const EventRequest = /*@__PURE__*/ proto3.makeMessageType(
  "nvidia.aceagent.chatcontroller.v1.EventRequest",
  () => [
    { no: 1, name: "stream_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "bot_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "event_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "event_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "user_context", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 9 /* ScalarType.STRING */} },
    { no: 7, name: "metadata", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 9 /* ScalarType.STRING */} },
  ],
);

/**
 * @generated from message nvidia.aceagent.chatcontroller.v1.EventResponse
 */
export const EventResponse = /*@__PURE__*/ proto3.makeMessageType(
  "nvidia.aceagent.chatcontroller.v1.EventResponse",
  () => [
    { no: 1, name: "stream_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "event_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "event_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "text", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "cleaned_text", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "is_final", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 8, name: "json_response", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "events", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ],
);

