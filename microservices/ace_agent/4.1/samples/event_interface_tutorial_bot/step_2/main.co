import core
import avatars
import llm

@meta(bot_intent=True)
flow bot express greeting
  (bot express "Hi there!"
    or bot express "Welcome!"
    or bot express "Hello!")
    and bot gesture "Wave with one hand"

# CHANGE 1
# Add two flows to handle ending the conversation: bot express goodbye, user expressed done
@meta(bot_intent=True)
flow bot express goodbye
  (bot express "Goodbye" or bot express "Talk to you soon!") and bot gesture "bowing in goodbye"

@meta(user_intent=True)
flow user expressed done
  user said (regex("(?i).*done.*|.*end.*demo.*|.*exit.*"))

flow handling user requests until user expressed done
  # CHANGE 2
  # This activates LLM-based responses for all unhandled user intents 
  activate llm continuation

  # CHANGE 3 (optional)
  # This will generated a variation of the question (variations are generated by the LLM)
  bot say something like "How can I help you today?"

  # CHANGE 4
  # When the user expressed we end the conversation
  user expressed done
  bot express goodbye

# The main flow is the entry point
@meta(exclude_from_llm=True)
flow main

  # Technical flows, see Colang 2.0 documentation for more details
  activate notification of undefined flow start
  activate notification of colang errors
  activate tracking bot talking state

  # The bot greets the user and a welcome message is shown on the UI
  start scene show short information "Welcome to this tutorial interaction" as $intro_ui
  bot express greeting

  # CHANGE 5
  # Start handling user requests
  handling user requests until user expressed done

  # This will prevent the main flow finishing ever
  wait indefinitely